[versions]
robolectric-compat = "4.10.2"
robolectric-nativeruntime-dist-compat = "1.0.1"

# https://developer.android.com/studio/releases
android-gradle = "8.1.1"

# https://github.com/google/conscrypt/tags
conscrypt = "2.5.2"

# https://github.com/bcgit/bc-java/tags
bouncycastle = "1.76"

# https://github.com/findbugsproject/findbugs/tags
findbugs-jsr305 = "3.0.2"

# https://github.com/hamcrest/JavaHamcrest/releases
hamcrest = "2.0.0.0"

# https://github.com/nebula-plugins/gradle-aggregate-javadocs-plugin/releases
aggregate-javadocs-gradle = "3.0.1"

# https://github.com/google/error-prone/releases
error-prone = "2.22.0"
error-prone-javac = "9+181-r4173-1"

# https://github.com/tbroyer/gradle-errorprone-plugin/releases
error-prone-gradle = "3.1.0"

# https://kotlinlang.org/docs/releases.html#release-details
kotlin = "1.9.10"

# https://github.com/Kotlin/kotlinx.coroutines/releases/
kotlinx-coroutines = '1.7.3'

# https://github.com/diffplug/spotless/blob/main/CHANGES.md
spotless-gradle = "6.21.0"

# https://hc.apache.org/news.html
apache-http-core = "4.0.1"
apache-http-client = "4.0.3"

# https://asm.ow2.io/versions.html
asm = "9.5"

# https://github.com/google/auto/releases
auto-common = "1.2.2"
auto-service = "1.1.1"
auto-value = "1.10.4"

compile-testing = "0.21.0"

# https://github.com/google/guava/releases
guava-jre = "32.1.2-jre"

# https://github.com/google/gson/releases
gson = "2.10.1"

# https://github.com/google/truth/releases
truth = "1.1.5"

# https://github.com/unicode-org/icu/releases
icu4j = "73.2"

jacoco = "0.8.10"

# https://github.com/javaee/javax.annotation/tags
javax-annotation-api = "1.3.2"
javax-annotation-jsr250-api = "1.0"
javax-inject = "1"

# https://github.com/JetBrains/java-annotations/releases
jetbrains-annotations = "24.0.1"

# https://junit.org/junit4/
junit4 = "4.13.2"

# https://github.com/google/libphonenumber/releases
libphonenumber = "8.13.20"

# https://github.com/mockito/mockito/releases
mockito = "4.11.0"

# https://github.com/mockk/mockk/releases
mockk = "1.13.7"

# https://square.github.io/okhttp/changelogs/changelog/
okhttp = "4.11.0"

# https://github.com/powermock/powermock/releases
powermock = "2.0.9"

sqlite4java = "1.0.392"

# https://developer.android.com/jetpack/androidx/versions
androidx-annotation = "1.3.0"
androidx-appcompat = "1.6.1"
androidx-biometric = "1.1.0"
androidx-constraintlayout = "2.1.4"
androidx-core = "1.10.1"
androidx-fragment = "1.6.1"
androidx-multidex = "2.0.1"
androidx-window = "1.1.0"

# https://github.com/android/android-test/tags
androidx-test-annotation = "1.0.1"
androidx-test-core = "1.5.0"
androidx-test-espresso = "3.5.1"
androidx-test-ext-junit = "1.1.5"
androidx-test-ext-truth = "1.5.0"
androidx-test-monitor="1.6.1"
androidx-test-orchestrator="1.4.2"
androidx-test-runner = "1.5.2"
androidx-test-services = "1.4.2"

# for shadows/playservices/build.gradle
androidx-fragment-for-shadows = "1.2.0"
play-services-base-for-shadows = "8.4.0"

[libraries]
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless-gradle" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines"}

auto-common = { module = "com.google.auto:auto-common", version.ref = "auto-common" }
auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "auto-service" }
auto-service = { module = "com.google.auto.service:auto-service", version.ref = "auto-service" }
auto-value-annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "auto-value" }
auto-value = { module = "com.google.auto.value:auto-value", version.ref = "auto-value" }

apache-http-core = { module = "org.apache.httpcomponents:httpcore", version.ref = "apache-http-core" }
apache-http-client = { module = "org.apache.httpcomponents:httpclient", version.ref = "apache-http-client" }

asm = { module = "org.ow2.asm:asm", version.ref = "asm" }
asm-commons = { module = "org.ow2.asm:asm-commons", version.ref = "asm" }
asm-util = { module = "org.ow2.asm:asm-util", version.ref = "asm" }
asm-tree = { module = "org.ow2.asm:asm-tree", version.ref = "asm" }

compile-testing = { module = "com.google.testing.compile:compile-testing", version.ref = "compile-testing" }

aggregate-javadocs-gradle = { module = "com.netflix.nebula:gradle-aggregate-javadocs-plugin", version.ref = "aggregate-javadocs-gradle" }

error-prone-core =  { module = "com.google.errorprone:error_prone_core", version.ref = "error-prone" }
error-prone-annotations = { module = "com.google.errorprone:error_prone_annotation", version.ref = "error-prone" }
error-prone-refaster= { module = "com.google.errorprone:error_prone_refaster", version.ref = "error-prone" }
error-prone-check-api = { module = "com.google.errorprone:error_prone_check_api", version.ref = "error-prone" }
error-prone-test-helpers = { module = "com.google.errorprone:error_prone_test_helpers", version.ref = "error-prone" }
error-prone-javac =  { module = "com.google.errorprone:javac", version.ref = "error-prone-javac" }

error-prone-gradle = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "error-prone-gradle" }

conscrypt-openjdk-uber = { module = "org.conscrypt:conscrypt-openjdk-uber", version.ref = "conscrypt" }
bcprov-jdk18on = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs-jsr305" }

guava = { module = "com.google.guava:guava", version.ref = "guava-jre" }
guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "guava-jre" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hamcrest-junit = { module = "org.hamcrest:hamcrest-junit", version.ref = "hamcrest" }

icu4j = { module = "com.ibm.icu:icu4j", version.ref = "icu4j" }

jacoco-agent = { module = "org.jacoco:org.jacoco.agent", version.ref = "jacoco" }
junit4 = { module = "junit:junit", version.ref = "junit4" }

javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation-api" }
javax-annotation-jsr250-api = { module = "javax.annotation:jsr250-api", version.ref = "javax-annotation-jsr250-api" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax.inject" }

jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }

libphonenumber = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "libphonenumber" }

okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }

powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock" }
powermock-module-junit4-rule = { module = "org.powermock:powermock-module-junit4-rule", version.ref = "powermock" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock" }
powermock-classloading-xstream = { module = "org.powermock:powermock-classloading-xstream", version.ref = "powermock" }

robolectric-nativeruntime-dist-compat = { module = "org.robolectric:nativeruntime-dist-compat", version.ref = "robolectric-nativeruntime-dist-compat" }

sqlite4java = { module = "com.almworks.sqlite4java:sqlite4java", version.ref = "sqlite4java" }
sqlite4java-osx = { module = "com.almworks.sqlite4java:libsqlite4java-osx", version.ref = "sqlite4java" }
sqlite4java-linux-amd64 = { module = "com.almworks.sqlite4java:libsqlite4java-linux-amd64", version.ref = "sqlite4java" }
sqlite4java-win32-x64 = { module = "com.almworks.sqlite4java:sqlite4java-win32-x64", version.ref = "sqlite4java" }
sqlite4java-linux-i386 = { module = "com.almworks.sqlite4java:libsqlite4java-linux-i386", version.ref = "sqlite4java" }
sqlite4java-win32-x86 = { module = "com.almworks.sqlite4java:sqlite4java-win32-x86", version.ref = "sqlite4java" }

truth = { module = "com.google.truth:truth", version.ref = "truth" }
truth-java8-extension = { module = "com.google.truth.extensions:truth-java8-extension", version.ref = "truth" }

mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "androidx-biometric" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "androidx-fragment" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidx-multidex" }
androidx-window = { module = "androidx.window:window", version.ref = "androidx-window" }

androidx-test-annotation = { module = "androidx.test:annotation", version.ref = "androidx-test-annotation" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-monitor = { module = "androidx.test:monitor", version.ref = "androidx-test-monitor" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-test-orchestrator" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-core" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-services = { module = "androidx.test.services:test-services", version.ref = "androidx-test-services" }
androidx-test-services-storage = { module = "androidx.test.services:storage", version.ref = "androidx-test-services" }

androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-espresso-accessibility = { module = "androidx.test.espresso:espresso-accessibility", version.ref = "androidx-test-espresso" }
androidx-test-espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidx-test-espresso" }
androidx-test-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidx-test-espresso" }
androidx-test-espresso-remote = { module = "androidx.test.espresso:espresso-remote", version.ref = "androidx-test-espresso" }
androidx-test-espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "androidx-test-espresso" }

androidx-test-espresso-idling-resource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "androidx-test-espresso" }
androidx-test-espresso-idling-concurrent = { module = "androidx.test.espresso.idling:idling-concurrent", version.ref = "androidx-test-espresso" }
androidx-test-espresso-idling-net = { module = "androidx.test.espresso.idling:idling-net", version.ref = "androidx-test-espresso" }

androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
androidx-test-ext-truth = { module = "androidx.test.ext:truth", version.ref = "androidx-test-ext-truth" }

androidx-fragment-for-shadows = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment-for-shadows" }
play-services-base-for-shadows = { module = "com.google.android.gms:play-services-base", version.ref = "play-services-base-for-shadows" }
play-services-basement-for-shadows = { module = "com.google.android.gms:play-services-basement", version.ref = "play-services-base-for-shadows" }

[bundles]
play-services-base-for-shadows = [ "androidx-fragment-for-shadows", "play-services-base-for-shadows", "play-services-basement-for-shadows" ]
powermock = [ "powermock-module-junit4", "powermock-module-junit4-rule", "powermock-api-mockito2", "powermock-classloading-xstream" ]
sqlite4java-native = [ "sqlite4java-osx", "sqlite4java-linux-amd64", "sqlite4java-win32-x64", "sqlite4java-linux-i386", "sqlite4java-win32-x86" ]

[plugins]
