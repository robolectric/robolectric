[versions]
androidx-espresso = "3.5.0-alpha05"
androidx-fragment = "1.4.0"
androidx-lifecycle = "2.2.0"
androidx-test = "1.4.0"
asm = "9.2"
google-autoService = "1.0-rc6"
google-autoValue = "1.7.4"
google-errorprone = "2.9.0"
google-guava = "27.0.1-jre"
google-playService = "8.4.0"
google-truth = "1.1.3"
httpcomponents = "4.0.3"
mockito = "4.1.0"
powermock = "2.0.9"
robolectricLegacy = "4.7"
sqlite4java = "1.0.392"
support = "28.0.0"

[libraries]
gradlePlugin-aggregateJavadoc = "com.netflix.nebula:gradle-aggregate-javadocs-plugin:3.0.1"
gradlePlugin-android = "com.android.tools.build:gradle:7.1.0"
gradlePlugin-errorprone = "net.ltgt.gradle:gradle-errorprone-plugin:2.0.2"
gradlePlugin-kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"
gradlePlugin-spotless = "com.diffplug.spotless:spotless-plugin-gradle:6.3.0"
gradlePlugin-versions = "com.github.ben-manes:gradle-versions-plugin:0.42.0"

android-multidex = "com.android.support:multidex:1.0.3"
android-support-annotations = { module = "com.android.support:support-annotations", version.ref = "support" }
android-support-compat = { module = "com.android.support:support-compat", version.ref = "support" }
android-support-coreUI = { module = "com.android.support:support-core-ui", version.ref = "support" }
android-support-coreUtils = { module = "com.android.support:support-core-utils", version.ref = "support" }
android-support-fragment = { module = "com.android.support:support-fragment", version.ref = "support" }
android-support-mediaCompat = { module = "com.android.support:support-media-compat", version.ref = "support" }
android-support-v4 = { module = "com.android.support:support-v4", version.ref = "support" }

androidx-annotation = "androidx.annotation:annotation:1.1.0"
androidx-appcompat = "androidx.appcompat:appcompat:1.4.1"
androidx-constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.3"
androidx-core = "androidx.core:core:1.5.0"
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "androidx-fragment" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "androidx-lifecycle" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-test-espresso-idling-resource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "androidx-espresso" }
androidx-test-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidx-espresso" }
androidx-test-junit = "androidx.test.ext:junit:1.1.3"
androidx-test-monitor = "androidx.test:monitor:1.5.0-alpha03"
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test" }
androidx-test-truth = { module = "androidx.test.ext:truth", version.ref = "androidx-test" }
androidx-window = "androidx.window:window:1.0.0"

asm = { module = "org.ow2.asm:asm", version.ref = "asm" }
asm-commons = { module = "org.ow2.asm:asm-commons", version.ref = "asm" }
asm-tree = { module = "org.ow2.asm:asm-tree", version.ref = "asm" }
asm-util = { module = "org.ow2.asm:asm-util", version.ref = "asm" }

bouncycastle = "org.bouncycastle:bcprov-jdk15on:1.68"
conscrypt = "org.conscrypt:conscrypt-openjdk-uber:2.4.0"
hamcrest = "org.hamcrest:hamcrest-junit:2.0.0.0"
icu4j = "com.ibm.icu:icu4j:70.1"
jetbrains-annotations = "org.jetbrains:annotations:16.0.2"
junit = "junit:junit:4.13.2"
mockk = "io.mockk:mockk:1.9.3"
okhttp = "com.squareup.okhttp3:okhttp:4.8.0"

google-autoCommon = "com.google.auto:auto-common:1.1.2"
google-autoService = { module = "com.google.auto.service:auto-service", version.ref = "google-autoService" }
google-autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "google-autoService" }
google-autoValue = { module = "com.google.auto.value:auto-value", version.ref = "google-autoValue" }
google-autoValue-Annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "google-autoValue" }
google-compileTesting = "com.google.testing.compile:compile-testing:0.18"
google-errorprone-annotation = { module = "com.google.errorprone:error_prone_annotation", version.ref = "google-errorprone" }
google-errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "google-errorprone" }
google-errorprone-checkApi = { module = "com.google.errorprone:error_prone_check_api", version.ref = "google-errorprone" }
google-errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "google-errorprone" }
google-errorprone-javac = "com.google.errorprone:javac:9+181-r4173-1"
google-errorprone-refaster = { module = "com.google.errorprone:error_prone_refaster", version.ref = "google-errorprone" }
google-errorprone-testHelpers = { module = "com.google.errorprone:error_prone_test_helpers", version.ref = "google-errorprone" }
google-findBugs = "com.google.code.findbugs:jsr305:3.0.2"
google-gms-playService-base = { module = "com.google.android.gms:play-services-base", version.ref = "google-playService" }
google-gms-playService-basement = { module = "com.google.android.gms:play-services-basement", version.ref = "google-playService" }
google-gson = "com.google.code.gson:gson:2.8.6"
google-guava = { module = "com.google.guava:guava", version.ref = "google-guava" }
google-guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "google-guava" }
google-libphonenumber = "com.googlecode.libphonenumber:libphonenumber:8.0.0"
google-truth = { module = "com.google.truth:truth", version.ref = "google-truth" }
google-truth-java8Extension = { module = "com.google.truth.extensions:truth-java8-extension", version.ref = "google-truth" }

httpcomponents-httpcore = { module = "org.apache.httpcomponents:httpcore", version.ref = "httpcomponents" }
httpcomponents-httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "httpcomponents" }

javax-jsr250 = "javax.annotation:jsr250-api:1.0"
javax-inject = "javax.inject:javax.inject:1"
javax-annotation = "javax.annotation:javax.annotation-api:1.3.2"

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }

powermock-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock" }
powermock-junit4-rule = { module = "org.powermock:powermock-module-junit4-rule", version.ref = "powermock" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock" }
powermock-classloading-xstream = { module = "org.powermock:powermock-classloading-xstream", version.ref = "powermock" }

robolectric-annotations = { module = "org.robolectric:annotations", version.ref = "robolectricLegacy" }
robolectric-junit = { module = "org.robolectric:junit", version.ref = "robolectricLegacy" }
robolectric-resources = { module = "org.robolectric:resources", version.ref = "robolectricLegacy" }
robolectric-robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricLegacy" }
robolectric-sandbox = { module = "org.robolectric:sandbox", version.ref = "robolectricLegacy" }
robolectric-shadowapi = { module = "org.robolectric:shadowapi", version.ref = "robolectricLegacy" }
robolectric-shadowsFramework = { module = "org.robolectric:shadows-framework", version.ref = "robolectricLegacy" }
robolectric-utils = { module = "org.robolectric:utils", version.ref = "robolectricLegacy" }

sqlite4java-libsqlite4java-linux64 = { module = "com.almworks.sqlite4java:libsqlite4java-linux-amd64", version.ref = "sqlite4java" }
sqlite4java-libsqlite4java-linux86 = { module = "com.almworks.sqlite4java:libsqlite4java-linux-i386", version.ref = "sqlite4java" }
sqlite4java-libsqlite4java-osx = { module = "com.almworks.sqlite4java:libsqlite4java-osx", version.ref = "sqlite4java" }
sqlite4java-libsqlite4java-win64 = { module = "com.almworks.sqlite4java:sqlite4java-win32-x64", version.ref = "sqlite4java" }
sqlite4java-libsqlite4java-win86 = { module = "com.almworks.sqlite4java:sqlite4java-win32-x86", version.ref = "sqlite4java" }
sqlite4java-sqlite4java = { module = "com.almworks.sqlite4java:sqlite4java", version.ref = "sqlite4java" }
